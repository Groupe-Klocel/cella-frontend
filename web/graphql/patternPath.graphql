# CELLA Frontend
# Website and Mobile templates that can be used to communicate
# with CELLA WMS APIs.
# Copyright (C) 2023 KLOCEL <contact@klocel.com>

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program. If not, see <https://www.gnu.org/licenses/>.
query GetAllPatternPaths(
    $filters: PatternPathSearchFilters
    $orderBy: [PatternPathOrderByCriterion!]
    $page: Int!
    $itemsPerPage: Int!
    $language: String
) {
    patternPaths(
        filters: $filters
        orderBy: $orderBy
        page: $page
        itemsPerPage: $itemsPerPage
        language: $language
    ) {
        count
        itemsPerPage
        totalPages
        results {
            id
            extras
            created
            createdBy
            modified
            modifiedBy
            name
            status
            statusText
            patternId
            stockOwnerId
            order
        }
    }
}

query GetPatternPathById($id: String!, $language: String = "en") {
    patternPath(id: $id, language: $language) {
        id
        extras
        created
        createdBy
        modified
        modifiedBy
        name
        status
        statusText
        patternId
        order
        stockOwnerId
        stockOwner {
            name
        }
    }
}

mutation CreatePatternPath($input: CreatePatternPathInput!) {
    createPatternPath(input: $input) {
        id
        extras
        created
        createdBy
        modified
        modifiedBy
        name
        status
        patternId
        stockOwnerId
    }
}

mutation DeletePatternPath($id: String!) {
    deletePatternPath(id: $id)
}

mutation UpdatePatternPath($id: String!, $input: UpdatePatternPathInput!) {
    updatePatternPath(id: $id, input: $input) {
        id
        extras
        created
        createdBy
        modified
        modifiedBy
        name
        status
        patternId
        stockOwnerId
    }
}

query GetPatternPathLocations(
    $filters: PatternPathLocationSearchFilters
    $orderBy: [PatternPathLocationOrderByCriterion!]
    $page: Int!
    $itemsPerPage: Int!
    $language: String
) {
    patternPathLocations(
        filters: $filters
        orderBy: $orderBy
        page: $page
        itemsPerPage: $itemsPerPage
        language: $language
    ) {
        count
        totalPages
        page
        itemsPerPage
        results {
            id
            extras
            created
            createdBy
            modified
            modifiedBy
            order
            locationId
            patternPathId
            location {
                id
                name
                position
                column
                level
                aisle
            }
        }
    }
}

mutation BulkCreatePatternPathLocations(
    $patternPathId: String!
    $inputs: [CreatePatternPathLocationInput!]!
) {
    bulkCreatePatternPathLocations(patternPathId: $patternPathId, inputs: $inputs) {
        id
        extras
        created
        createdBy
        modified
        modifiedBy
        order
        locationId
        patternPathId
        location {
            id
            name
            position
            column
            level
            aisle
        }
    }
}

mutation bulkUpdatePatternPathLocations(
    $patternPathId: String!
    $inputs: [UpdatePatternPathLocationsInput!]!
) {
    bulkUpdatePatternPathLocations(patternPathId: $patternPathId, inputs: $inputs) {
        id
        extras
        created
        createdBy
        modified
        modifiedBy
        order
        locationId
        patternPathId
        location {
            id
            name
            position
            column
            level
            aisle
        }
    }
}

mutation BulkDeletePatternPathLocations($patternPathId: String!) {
    bulkDeletePatternPathLocations(patternPathId: $patternPathId)
}

# DISABLE PATTERN PATH
mutation softDeletePatternPath($id: String!) {
    softDeletePatternPath(id: $id)
}

# EO SOFT DELETE

# Order
query getListOfOrders {
    patternPaths {
        results {
            order
            id
            name
        }
    }
}
# EO Order
