# CELLA Frontend
# Website and Mobile templates that can be used to communicate
# with CELLA WMS APIs.
# Copyright (C) 2023 KLOCEL <contact@klocel.com>

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program. If not, see <https://www.gnu.org/licenses/>.
query GetAllConversions(
    $filters: ConversionSearchFilters
    $orderBy: [ConversionOrderByCriterion!]
    $page: Int!
    $itemsPerPage: Int!
) {
    conversions(filters: $filters, orderBy: $orderBy, page: $page, itemsPerPage: $itemsPerPage) {
        count
        itemsPerPage
        totalPages
        results {
            id
            stockOwnerId
            stockOwner {
                id
                name
            }
            status
            statusText
            type
            typeText
            entry1
            exit1
            entry2
            exit2
            entry3
            exit3
            entry4
            exit4
            entry5
            exit5
            extras
            created
            createdBy
            modified
            modifiedBy
        }
    }
}

query GetConversionById($id: String!) {
    conversion(id: $id) {
        id
        stockOwnerId
        stockOwner {
            id
            name
        }
        status
        statusText
        type
        typeText
        entry1
        exit1
        entry2
        exit2
        entry3
        exit3
        entry4
        exit4
        entry5
        exit5
        extras
        created
        createdBy
        modified
        modifiedBy
    }
}

query GetConversionIds(
    $filters: ConversionSearchFilters
    $orderBy: [ConversionOrderByCriterion!]
    $page: Int!
    $itemsPerPage: Int!
) {
    conversions(filters: $filters, orderBy: $orderBy, page: $page, itemsPerPage: $itemsPerPage) {
        count
        itemsPerPage
        totalPages
        results {
            id
        }
    }
}

mutation CreateConversion($input: CreateConversionInput!) {
    createConversion(input: $input) {
        id
        stockOwnerId
        stockOwner {
            id
            name
        }
        status
        statusText
        type
        typeText
        entry1
        exit1
        entry2
        exit2
        entry3
        exit3
        entry4
        exit4
        entry5
        exit5
        extras
        created
        createdBy
        modified
        modifiedBy
    }
}

mutation DeleteConversion($id: String!) {
    deleteConversion(id: $id)
}

mutation SoftDeleteConversion($id: String!) {
    softDeleteConversion(id: $id)
}

mutation UpdateConversion($id: String!, $input: UpdateConversionInput!) {
    updateConversion(id: $id, input: $input) {
        id
        stockOwnerId
        stockOwner {
            id
            name
        }
        status
        statusText
        type
        typeText
        entry1
        exit1
        entry2
        exit2
        entry3
        exit3
        entry4
        exit4
        entry5
        exit5
        extras
        created
        createdBy
        modified
        modifiedBy
    }
}

query getConversionsStatusesConfigs {
    listConfigsForAScope(scope: "conversion_status") {
        id
        scope
        code
        text
    }
}

query getConversionsTypesConfigs {
    listConfigsForAScope(scope: "conversion_type") {
        id
        scope
        code
        text
    }
}

query SimpleGetAllStockOwners {
    stockOwners {
        results {
            id
            name
        }
    }
}
