# CELLA Frontend
# Website and Mobile templates that can be used to communicate
# with CELLA WMS APIs.
# Copyright (C) 2023 KLOCEL <contact@klocel.com>

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program. If not, see <https://www.gnu.org/licenses/>.
query GetAllPatterns(
    $filters: PatternSearchFilters
    $orderBy: [PatternOrderByCriterion!]
    $page: Int!
    $itemsPerPage: Int!
    $language: String
) {
    patterns(
        filters: $filters
        orderBy: $orderBy
        page: $page
        itemsPerPage: $itemsPerPage
        language: $language
    ) {
        count
        itemsPerPage
        totalPages
        results {
            id
            patternPaths {
                id
                name
                status
                extras
            }
            stockOwner {
                id
                name
            }
            extras
            created
            createdBy
            modified
            modifiedBy
            name
            typeText
            status
            stockOwnerId
            type
            statusText
        }
    }
}

query GetPatternById($id: String!, $language: String = "en") {
    pattern(id: $id, language: $language) {
        id
        patternPaths {
            id
            name
            status
            extras
        }
        stockOwner {
            id
            name
        }
        extras
        created
        createdBy
        modified
        modifiedBy
        name
        type
        status
        stockOwnerId
        typeText
        statusText
    }
}

mutation CreatePattern($input: CreatePatternInput!) {
    createPattern(input: $input) {
        id
        patternPaths {
            id
            name
            status
            extras
        }
        stockOwner {
            id
            name
        }
        extras
        created
        createdBy
        modified
        modifiedBy
        name
        type
        status
        stockOwnerId
        typeText
        statusText
    }
}

mutation DeletePattern($id: String!) {
    deletePattern(id: $id)
}

mutation UpdatePattern($id: String!, $input: UpdatePatternInput!) {
    updatePattern(id: $id, input: $input) {
        id
        patternPaths {
            id
            name
            status
            extras
        }
        stockOwner {
            id
            name
        }
        extras
        created
        createdBy
        modified
        modifiedBy
        name
        type
        status
        stockOwnerId
        typeText
        statusText
    }
}

query GetPatternIds(
    $filters: PatternSearchFilters
    $orderBy: [PatternOrderByCriterion!]
    $page: Int!
    $itemsPerPage: Int!
) {
    patterns(filters: $filters, orderBy: $orderBy, page: $page, itemsPerPage: $itemsPerPage) {
        count
        itemsPerPage
        totalPages
        results {
            id
            name
        }
    }
}

# DISABLE PATTERN
mutation softDeletePattern($id: String!) {
    softDeletePattern(id: $id)
}
