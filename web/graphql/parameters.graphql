# CELLA Frontend
# Website and Mobile templates that can be used to communicate
# with CELLA WMS APIs.
# Copyright (C) 2023 KLOCEL <contact@klocel.com>

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program. If not, see <https://www.gnu.org/licenses/>.
query getAllParams(
    $filters: ParameterSearchFilters
    $orderBy: [ParameterOrderByCriterion!]
    $page: Int!
    $itemsPerPage: Int!
) {
    parameters(filters: $filters, orderBy: $orderBy, page: $page, itemsPerPage: $itemsPerPage) {
        count
        itemsPerPage
        totalPages
        results {
            id
            scope
            code
            value
            extras
            created
            createdBy
            modified
            modifiedBy
            translation
            system
        }
    }
}

query GetParameterById($id: String!) {
    parameter(id: $id) {
        id
        scope
        code
        value
        extras
        created
        createdBy
        modified
        modifiedBy
        translation
        system
    }
}

mutation CreateParameter($input: CreateParameterInput!) {
    createParameter(input: $input) {
        id
        scope
        code
        value
    }
}

mutation DeleteParameter($id: String!) {
    deleteParameter(id: $id)
}

mutation UpdateParameter($id: String!, $input: UpdateParameterInput!) {
    updateParameter(id: $id, input: $input) {
        id
        scope
        code
        value
    }
}

mutation DeleteFeatureType($featureTypeId: String!) {
    deleteFeatureType(featureTypeId: $featureTypeId)
}

query getFeatureTypesParams {
    listParametersForAScope(scope: "feature_type") {
        id
        scope
        code
        text
    }
}

query getArticleFeatureTypeParameters {
    listParametersForAScope(scope: "feature_type") {
        id
        scope
        code
        text
    }
}
# All scope for parameter .
query GetParameterScopes {
    parameterScopes {
        scope
    }
}
