# CELLA Frontend
# Website and Mobile templates that can be used to communicate
# with CELLA WMS APIs.
# Copyright (C) 2023 KLOCEL <contact@klocel.com>

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program. If not, see <https://www.gnu.org/licenses/>.
query getLogisticUnitStatusConfigs {
    listConfigsForAScope(scope: "logistic_unit_status") {
        id
        scope
        code
        text
    }
}

query getLogisticUnitModelParameters {
    listParametersForAScope(scope: "logistic_unit_model") {
        id
        scope
        code
        text
    }
}

query SimpleGetAllStockOwners {
    stockOwners {
        results {
            id
            name
        }
    }
}

query SimpleGetAllLogisticUnits {
    logisticUnits {
        results {
            id
            name
        }
    }
}

query GetAllLogisticUnits(
    $filters: LogisticUnitSearchFilters
    $orderBy: [LogisticUnitOrderByCriterion!]
    $page: Int!
    $itemsPerPage: Int!
) {
    logisticUnits(filters: $filters, orderBy: $orderBy, page: $page, itemsPerPage: $itemsPerPage) {
        count
        itemsPerPage
        totalPages
        results {
            id
            stockOwnerId
            model
            name
            parentLogisticUnitId
            length
            width
            height
            status
            order
            created
            createdBy
            modified
            modifiedBy
            parentLogisticUnit {
                id
                name
            }
        }
    }
}

query GetLogisticUnitById($id: String!) {
    logisticUnit(id: $id) {
        id
        stockOwnerId
        model
        name
        parentLogisticUnitId
        length
        width
        height
        status
        order
        created
        createdBy
        modified
        modifiedBy
        parentLogisticUnit {
            id
            name
        }
    }
}

mutation CreateLogisticUnit($input: CreateLogisticUnitInput!) {
    createLogisticUnit(input: $input) {
        id
        stockOwnerId
        model
        name
        parentLogisticUnitId
        length
        width
        height
        status
        order
    }
}

mutation DeleteLogisticUnit($id: String!) {
    deleteLogisticUnit(id: $id)
}

mutation UpdateLogisticUnit($id: String!, $input: UpdateLogisticUnitInput!) {
    updateLogisticUnit(id: $id, input: $input) {
        id
        stockOwnerId
        model
        name
        parentLogisticUnitId
        length
        width
        height
        status
        order
    }
}

query GetLogisticUnitIds(
    $filters: LogisticUnitSearchFilters
    $orderBy: [LogisticUnitOrderByCriterion!]
    $page: Int!
    $itemsPerPage: Int!
) {
    logisticUnits(filters: $filters, orderBy: $orderBy, page: $page, itemsPerPage: $itemsPerPage) {
        count
        itemsPerPage
        totalPages
        results {
            id
            name
            stockOwnerId
            status
        }
    }
}

mutation SoftDeleteLogisticUnit($id: String!) {
    softDeleteLogisticUnit(id: $id)
}

query GetArticleLuByLuId($id: String!) {
    articleLuByLuId(luId: $id) {
        id
        articleId
        stockOwnerId
        article {
            name
            description
            supplierName
            length
            width
            height
            baseUnitWeight
        }
    }
}
