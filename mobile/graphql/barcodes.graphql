# CELLA Frontend
# Website and Mobile templates that can be used to communicate
# with CELLA WMS APIs.
# Copyright (C) 2023 KLOCEL <contact@klocel.com>

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program. If not, see <https://www.gnu.org/licenses/>.
query GetAllBarcodes(
    $filters: BarcodeSearchFilters
    $orderBy: [BarcodeOrderByCriterion!]
    $page: Int!
    $itemsPerPage: Int!
    $language: String
) {
    barcodes(
        filters: $filters
        orderBy: $orderBy
        page: $page
        itemsPerPage: $itemsPerPage
        language: $language
    ) {
        count
        itemsPerPage
        totalPages
        results {
            id
            name
            supplierName
            supplierArticleCode
            blacklisted
            stockOwnerId
            stockOwner {
                name
            }
            articleLuBarcodes {
                article {
                    description
                    name
                    length
                    width
                    height
                    baseUnitWeight
                }
                articleLu {
                    name
                    length
                    width
                    height
                    baseUnitWeight
                }
            }
        }
    }
}

query GetBarcodeById($id: String!) {
    barcode(id: $id) {
        id
        name
        supplierName
        supplierArticleCode
        blacklisted
        stockOwnerId
        stockOwner {
            name
        }
        articleLuBarcodes {
            article {
                description
                name
                length
                width
                height
                baseUnitWeight
            }
            articleLu {
                name
                length
                width
                height
                baseUnitWeight
            }
        }
    }
}

query GetArticleLuBarcodeByBarcodeId($id: String!) {
    articleLuBarcodesByBarcodeId(barcodeId: $id) {
        id
        articleId
        stockOwnerId
        barcodeId
        article {
            name
            description
            supplierName
            length
            width
            height
            baseUnitWeight
        }
        barcode {
            id
            name
            supplierName
            supplierArticleCode
            blacklisted
        }
    }
}

mutation CreateBarcode($input: CreateBarcodeInput!) {
    createBarcode(input: $input) {
        id
        name
        supplierName
        supplierArticleCode
        blacklisted
        stockOwnerId
    }
}

mutation DeleteBarcode($id: String!) {
    deleteBarcode(id: $id)
}

# mutation ExportBarcodes(
#     $format: ExportFormat
#     $compression: ExportCompression
#     $separator: String
#     $orderBy: [BarcodeOrderByCriterion!]
#     $filters: BarcodeSearchFilters
# ) {
#     exportBarcodes(
#         format: $format
#         compression: $compression
#         separator: $separator
#         orderBy: $orderBy
#         filters: $filters
#     ) {
#         url
#     }
# }

mutation RenderDocument($templateFilename: String!, $context: JSON!) {
    renderDocument(templateFilename: $templateFilename, context: $context) {
        __typename
        ... on RenderedDocument {
            url
        }
        ... on TemplateDoesNotExist {
            message
        }
        ... on TemplateError {
            message
        }
        ... on MissingContext {
            message
        }
    }
}

mutation UpdateBarcode($id: String!, $input: UpdateBarcodeInput!) {
    updateBarcode(id: $id, input: $input) {
        id
        name
        supplierName
        supplierArticleCode
        blacklisted
        stockOwnerId
    }
}

query getBarcodesRotationsParams {
    listParametersForAScope(scope: "rotation") {
        id
        scope
        code
        text
    }
}

query getBarcodesPreparationModesParams {
    listParametersForAScope(scope: "preparation_mode") {
        id
        scope
        code
        text
    }
}

query GetSimpleArticleLus(
    $filters: ArticleLuSearchFilters
    $orderBy: [ArticleLuOrderByCriterion!]
    $page: Int!
    $itemsPerPage: Int!
    $language: String
) {
    articleLus(
        filters: $filters
        orderBy: $orderBy
        page: $page
        itemsPerPage: $itemsPerPage
        language: $language
    ) {
        results {
            id
            articleId
            name
        }
    }
}
